/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.sql.*;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class FrameMain extends javax.swing.JFrame {
    Connection conn;
    ResultSet res;
    DefaultTableModel tbModel;
    PreparedStatement ppStatement;

    /**
     * Creates new form FrameMain 
     */
    public FrameMain() {
        initComponents();
        this.setSize(600, 450);
        this.setTitle("Quản lý CDDVD");
        
        ketnoidb();
        tbModel = (DefaultTableModel) tbThongTin.getModel();
        hienthi();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbMa = new javax.swing.JLabel();
        lbTieuDe = new javax.swing.JLabel();
        lbNXB = new javax.swing.JLabel();
        tfNXB = new javax.swing.JTextField();
        tfTieuDe = new javax.swing.JTextField();
        tfMa = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnFind = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbThongTin = new javax.swing.JTable();
        lbLoai = new javax.swing.JLabel();
        tfLoai = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        lbMa.setText("Mã:");
        getContentPane().add(lbMa);
        lbMa.setBounds(20, 20, 30, 16);

        lbTieuDe.setText("Tiêu đề:");
        getContentPane().add(lbTieuDe);
        lbTieuDe.setBounds(20, 60, 60, 16);

        lbNXB.setText("Năm xuất bản: ");
        getContentPane().add(lbNXB);
        lbNXB.setBounds(20, 120, 100, 16);
        getContentPane().add(tfNXB);
        tfNXB.setBounds(110, 120, 250, 22);
        getContentPane().add(tfTieuDe);
        tfTieuDe.setBounds(110, 60, 250, 22);
        getContentPane().add(tfMa);
        tfMa.setBounds(110, 20, 250, 22);

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        getContentPane().add(btnThem);
        btnThem.setBounds(10, 160, 65, 25);

        btnLuu.setText("Lưu");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });
        getContentPane().add(btnLuu);
        btnLuu.setBounds(80, 160, 70, 25);

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        getContentPane().add(btnXoa);
        btnXoa.setBounds(160, 160, 70, 25);

        btnFind.setText("Tìm Kiếm");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });
        getContentPane().add(btnFind);
        btnFind.setBounds(240, 160, 87, 25);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tbThongTin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã", "Tiêu đề", "Loại", "Năm XB"
            }
        ));
        tbThongTin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbThongTinMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbThongTin);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 200, 600, 250);

        lbLoai.setText("Loại:");
        getContentPane().add(lbLoai);
        lbLoai.setBounds(20, 90, 50, 16);
        getContentPane().add(tfLoai);
        tfLoai.setBounds(110, 90, 250, 22);

        setSize(new java.awt.Dimension(618, 497));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tbThongTinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbThongTinMouseClicked
        int rowN = tbThongTin.getSelectedRow();
        tfMa.setText((String) tbModel.getValueAt(rowN, 0));
        tfTieuDe.setText((String) tbModel.getValueAt(rowN, 1));
        tfLoai.setText((String) tbModel.getValueAt(rowN, 2));
        tfNXB.setText(tbModel.getValueAt(rowN, 3)+"");
    }//GEN-LAST:event_tbThongTinMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        tfMa.setText("");
        tfNXB.setText("");
        tfLoai.setText("");
        tfTieuDe.setText("");
        tfMa.requestFocus();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        String ma = tfMa.getText();
        if(maTonTai(ma))
        {
            int chon = JOptionPane.showConfirmDialog(this, "Mã ["+ma+"] đã tồn tại bạn có muốn cập nhật không?", "Thông Báo", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
            if(chon == JOptionPane.YES_OPTION){
                try {
                    String sql = "Update CDDVDCollection set tieude = ?, loaidia=?, namxuatban=? where ma=?";
                    ppStatement = conn.prepareStatement(sql);
                    ppStatement.setString(1, tfTieuDe.getText());
                    ppStatement.setString(2, tfLoai.getText());
                    ppStatement.setInt(3, Integer.parseInt(tfNXB.getText()));
                    ppStatement.setString(4, ma);
                    int kq = ppStatement.executeUpdate();
                    if (kq>0) 
                        hienthi();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }else {
            int chon = JOptionPane.showConfirmDialog(this, "Bạn có muốn thêm không?", "Thông Báo", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
            if(chon == JOptionPane.YES_OPTION){
                try {
                    String sql = "insert CDDVDCollection values(?, ?, ?, ?)";
                    ppStatement = conn.prepareStatement(sql);
                    ppStatement.setString(1, ma);
                    ppStatement.setString(2, tfTieuDe.getText());
                    ppStatement.setString(3, tfLoai.getText());
                    ppStatement.setInt(4, Integer.parseInt(tfNXB.getText()));
                    int kq = ppStatement.executeUpdate();
                    if (kq>0) 
                        hienthi();
                } catch (Exception e) {
                }
            }
        }
    }//GEN-LAST:event_btnLuuActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        String ma = tfMa.getText();
        if(!ma.equals("")) {
            int chon = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa không?", "Thông Báo", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
            if (chon == JOptionPane.YES_OPTION)
            {
                try {
                    String sql = "delete from CDDVDCollection where ma =?";
                    ppStatement = conn.prepareStatement(sql);
                    int kq = ppStatement.executeUpdate();
                    if (kq>0) 
                        hienthi();
                } catch (Exception e) {
                }
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        new FindDialog(this, true).setVisible(true);
    }//GEN-LAST:event_btnFindActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbLoai;
    private javax.swing.JLabel lbMa;
    private javax.swing.JLabel lbNXB;
    private javax.swing.JLabel lbTieuDe;
    private javax.swing.JTable tbThongTin;
    private javax.swing.JTextField tfLoai;
    private javax.swing.JTextField tfMa;
    private javax.swing.JTextField tfNXB;
    private javax.swing.JTextField tfTieuDe;
    // End of variables declaration//GEN-END:variables

    private void ketnoidb() {
        String strServer = "MSI-PC";
        String strDatabase = "dbQuanLyCDDVD";
        String uid = "sa";
        String pwd = "sa123";
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String connectionURL = "jdbc:sqlserver://" + strServer
                    + ":1433;databaseName=" + strDatabase
                    + ";user = " + uid
                    + ";password = " + pwd;
            conn = DriverManager.getConnection(connectionURL);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void hienthi() {
        String strShow = "Select * from CDDVDCollection";
        try {
            ppStatement = conn.prepareStatement(strShow);
            res = ppStatement.executeQuery();
            tbModel.setRowCount(0);
            while(res.next()){
                Vector<Object> v = new Vector<Object>();
                v.add(res.getString("Ma"));
                v.add(res.getString("TieuDe"));
                v.add(res.getString("LoaiDia"));
                v.add(res.getInt("NamXuatBan"));
                tbModel.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }

    private boolean maTonTai(String ma) {
        String sql = "select * from CDDVDCollection where Ma = ?";
        try {
            ppStatement = conn.prepareStatement(sql);
            ppStatement.setString(1, ma);
            res = ppStatement.executeQuery();
            return res.next();
        } catch (Exception e) {
            e.printStackTrace();
        }
       return false;
    }
}
